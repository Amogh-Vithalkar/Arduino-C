
2_traffic_lights.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001f2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  000001f2  00000266  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000020  00000000  00000000  0000027a  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 0000001b  00000000  00000000  0000029a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000001c5  00000000  00000000  000002b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000117  00000000  00000000  0000047a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000001e0  00000000  00000000  00000591  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000020  00000000  00000000  00000774  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000d5  00000000  00000000  00000794  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000088  00000000  00000000  00000869  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000048  00000000  00000000  000008f1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 ef       	ldi	r30, 0xF2	; 242
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a4 37       	cpi	r26, 0x74	; 116
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 f7 00 	jmp	0x1ee	; 0x1ee <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
//2 traffic lights 
#include<avr/io.h>
#include<util/delay.h>

void main()
{
  82:	bf 92       	push	r11
  84:	cf 92       	push	r12
  86:	df 92       	push	r13
  88:	ef 92       	push	r14
  8a:	ff 92       	push	r15
  8c:	0f 93       	push	r16
  8e:	1f 93       	push	r17
  90:	df 93       	push	r29
  92:	cf 93       	push	r28
  94:	cd b7       	in	r28, 0x3d	; 61
  96:	de b7       	in	r29, 0x3e	; 62
  98:	64 97       	sbiw	r28, 0x14	; 20
  9a:	0f b6       	in	r0, 0x3f	; 63
  9c:	f8 94       	cli
  9e:	de bf       	out	0x3e, r29	; 62
  a0:	0f be       	out	0x3f, r0	; 63
  a2:	cd bf       	out	0x3d, r28	; 61
	int i,j,k,l,m,n,array[10]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0xfd,0x07,0x7f,0x6f};
  a4:	de 01       	movw	r26, r28
  a6:	11 96       	adiw	r26, 0x01	; 1
  a8:	e0 e6       	ldi	r30, 0x60	; 96
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	84 e1       	ldi	r24, 0x14	; 20
  ae:	01 90       	ld	r0, Z+
  b0:	0d 92       	st	X+, r0
  b2:	81 50       	subi	r24, 0x01	; 1
  b4:	e1 f7       	brne	.-8      	; 0xae <main+0x2c>
	DDRA=0xff;
  b6:	8f ef       	ldi	r24, 0xFF	; 255
  b8:	8a bb       	out	0x1a, r24	; 26
	DDRB=0xff;
  ba:	87 bb       	out	0x17, r24	; 23
	DDRC=0xff;
  bc:	84 bb       	out	0x14, r24	; 20
	DDRD=0xff;
  be:	81 bb       	out	0x11, r24	; 17
		for(i=0;i<=5;i++)
		{
			j=i%10;
			k=i/10;	
			PORTA=array[j];
			PORTB=array[k];
  c0:	49 81       	ldd	r20, Y+1	; 0x01
  c2:	20 e0       	ldi	r18, 0x00	; 0
  c4:	30 e0       	ldi	r19, 0x00	; 0
	{
		for(i=0;i<=29;i++)
		{
			j=i%10;
			k=i/10;	
			PORTA=array[j];
  c6:	8e 01       	movw	r16, r28
  c8:	0f 5f       	subi	r16, 0xFF	; 255
  ca:	1f 4f       	sbci	r17, 0xFF	; 255
			PORTB=array[k];
			PORTC=0b10000001;
  cc:	b1 e8       	ldi	r27, 0x81	; 129
  ce:	bb 2e       	mov	r11, r27
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  d0:	a0 e5       	ldi	r26, 0x50	; 80
  d2:	ea 2e       	mov	r14, r26
  d4:	a3 ec       	ldi	r26, 0xC3	; 195
  d6:	fa 2e       	mov	r15, r26
		{
			j=i%10;
			k=i/10;	
			PORTA=array[j];
			PORTB=array[k];
			PORTC=0b01000010;
  d8:	f2 e4       	ldi	r31, 0x42	; 66
  da:	cf 2e       	mov	r12, r31
		{
			j=i%10;
			k=i/10;	
			PORTA=array[j];
			PORTB=array[k];
			PORTC=0b00100100;
  dc:	e4 e2       	ldi	r30, 0x24	; 36
  de:	de 2e       	mov	r13, r30
  e0:	1e c0       	rjmp	.+60     	; 0x11e <main+0x9c>
	{
		for(i=0;i<=29;i++)
		{
			j=i%10;
			k=i/10;	
			PORTA=array[j];
  e2:	c9 01       	movw	r24, r18
  e4:	6a e0       	ldi	r22, 0x0A	; 10
  e6:	70 e0       	ldi	r23, 0x00	; 0
  e8:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <__divmodhi4>
  ec:	fc 01       	movw	r30, r24
  ee:	ee 0f       	add	r30, r30
  f0:	ff 1f       	adc	r31, r31
  f2:	e0 0f       	add	r30, r16
  f4:	f1 1f       	adc	r31, r17
  f6:	80 81       	ld	r24, Z
  f8:	8b bb       	out	0x1b, r24	; 27
			PORTB=array[k];
  fa:	c9 01       	movw	r24, r18
  fc:	6a e0       	ldi	r22, 0x0A	; 10
  fe:	70 e0       	ldi	r23, 0x00	; 0
 100:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <__divmodhi4>
 104:	fb 01       	movw	r30, r22
 106:	ee 0f       	add	r30, r30
 108:	ff 1f       	adc	r31, r31
 10a:	e0 0f       	add	r30, r16
 10c:	f1 1f       	adc	r31, r17
 10e:	80 81       	ld	r24, Z
 110:	88 bb       	out	0x18, r24	; 24
			PORTC=0b10000001;
 112:	b5 ba       	out	0x15, r11	; 21
 114:	c7 01       	movw	r24, r14
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <main+0x94>
	DDRC=0xff;
	DDRD=0xff;

	while(1)
	{
		for(i=0;i<=29;i++)
 11a:	2f 5f       	subi	r18, 0xFF	; 255
 11c:	3f 4f       	sbci	r19, 0xFF	; 255
 11e:	2e 31       	cpi	r18, 0x1E	; 30
 120:	31 05       	cpc	r19, r1
 122:	fc f2       	brlt	.-66     	; 0xe2 <main+0x60>
 124:	20 e0       	ldi	r18, 0x00	; 0
 126:	30 e0       	ldi	r19, 0x00	; 0

		for(i=0;i<=5;i++)
		{
			j=i%10;
			k=i/10;	
			PORTA=array[j];
 128:	c9 01       	movw	r24, r18
 12a:	6a e0       	ldi	r22, 0x0A	; 10
 12c:	70 e0       	ldi	r23, 0x00	; 0
 12e:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <__divmodhi4>
 132:	fc 01       	movw	r30, r24
 134:	ee 0f       	add	r30, r30
 136:	ff 1f       	adc	r31, r31
 138:	e0 0f       	add	r30, r16
 13a:	f1 1f       	adc	r31, r17
 13c:	80 81       	ld	r24, Z
 13e:	8b bb       	out	0x1b, r24	; 27
			PORTB=array[k];
 140:	48 bb       	out	0x18, r20	; 24
			PORTC=0b01000010;
 142:	c5 ba       	out	0x15, r12	; 21
 144:	c7 01       	movw	r24, r14
 146:	01 97       	sbiw	r24, 0x01	; 1
 148:	f1 f7       	brne	.-4      	; 0x146 <main+0xc4>
			PORTB=array[k];
			PORTC=0b10000001;
			_delay_ms(200);
		}

		for(i=0;i<=5;i++)
 14a:	2f 5f       	subi	r18, 0xFF	; 255
 14c:	3f 4f       	sbci	r19, 0xFF	; 255
 14e:	26 30       	cpi	r18, 0x06	; 6
 150:	31 05       	cpc	r19, r1
 152:	51 f7       	brne	.-44     	; 0x128 <main+0xa6>
 154:	20 e0       	ldi	r18, 0x00	; 0
 156:	30 e0       	ldi	r19, 0x00	; 0

		for(i=0;i<=29;i++)
		{
			j=i%10;
			k=i/10;	
			PORTA=array[j];
 158:	c9 01       	movw	r24, r18
 15a:	6a e0       	ldi	r22, 0x0A	; 10
 15c:	70 e0       	ldi	r23, 0x00	; 0
 15e:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <__divmodhi4>
 162:	fc 01       	movw	r30, r24
 164:	ee 0f       	add	r30, r30
 166:	ff 1f       	adc	r31, r31
 168:	e0 0f       	add	r30, r16
 16a:	f1 1f       	adc	r31, r17
 16c:	80 81       	ld	r24, Z
 16e:	8b bb       	out	0x1b, r24	; 27
			PORTB=array[k];
 170:	c9 01       	movw	r24, r18
 172:	6a e0       	ldi	r22, 0x0A	; 10
 174:	70 e0       	ldi	r23, 0x00	; 0
 176:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <__divmodhi4>
 17a:	fb 01       	movw	r30, r22
 17c:	ee 0f       	add	r30, r30
 17e:	ff 1f       	adc	r31, r31
 180:	e0 0f       	add	r30, r16
 182:	f1 1f       	adc	r31, r17
 184:	80 81       	ld	r24, Z
 186:	88 bb       	out	0x18, r24	; 24
			PORTC=0b00100100;
 188:	d5 ba       	out	0x15, r13	; 21
 18a:	c7 01       	movw	r24, r14
 18c:	01 97       	sbiw	r24, 0x01	; 1
 18e:	f1 f7       	brne	.-4      	; 0x18c <main+0x10a>
			PORTB=array[k];
			PORTC=0b01000010;
			_delay_ms(200);
		}

		for(i=0;i<=29;i++)
 190:	2f 5f       	subi	r18, 0xFF	; 255
 192:	3f 4f       	sbci	r19, 0xFF	; 255
 194:	2e 31       	cpi	r18, 0x1E	; 30
 196:	31 05       	cpc	r19, r1
 198:	f9 f6       	brne	.-66     	; 0x158 <main+0xd6>
 19a:	20 e0       	ldi	r18, 0x00	; 0
 19c:	30 e0       	ldi	r19, 0x00	; 0
 19e:	bf cf       	rjmp	.-130    	; 0x11e <main+0x9c>

000001a0 <__divmodhi4>:
 1a0:	97 fb       	bst	r25, 7
 1a2:	09 2e       	mov	r0, r25
 1a4:	07 26       	eor	r0, r23
 1a6:	0a d0       	rcall	.+20     	; 0x1bc <__divmodhi4_neg1>
 1a8:	77 fd       	sbrc	r23, 7
 1aa:	04 d0       	rcall	.+8      	; 0x1b4 <__divmodhi4_neg2>
 1ac:	0c d0       	rcall	.+24     	; 0x1c6 <__udivmodhi4>
 1ae:	06 d0       	rcall	.+12     	; 0x1bc <__divmodhi4_neg1>
 1b0:	00 20       	and	r0, r0
 1b2:	1a f4       	brpl	.+6      	; 0x1ba <__divmodhi4_exit>

000001b4 <__divmodhi4_neg2>:
 1b4:	70 95       	com	r23
 1b6:	61 95       	neg	r22
 1b8:	7f 4f       	sbci	r23, 0xFF	; 255

000001ba <__divmodhi4_exit>:
 1ba:	08 95       	ret

000001bc <__divmodhi4_neg1>:
 1bc:	f6 f7       	brtc	.-4      	; 0x1ba <__divmodhi4_exit>
 1be:	90 95       	com	r25
 1c0:	81 95       	neg	r24
 1c2:	9f 4f       	sbci	r25, 0xFF	; 255
 1c4:	08 95       	ret

000001c6 <__udivmodhi4>:
 1c6:	aa 1b       	sub	r26, r26
 1c8:	bb 1b       	sub	r27, r27
 1ca:	51 e1       	ldi	r21, 0x11	; 17
 1cc:	07 c0       	rjmp	.+14     	; 0x1dc <__udivmodhi4_ep>

000001ce <__udivmodhi4_loop>:
 1ce:	aa 1f       	adc	r26, r26
 1d0:	bb 1f       	adc	r27, r27
 1d2:	a6 17       	cp	r26, r22
 1d4:	b7 07       	cpc	r27, r23
 1d6:	10 f0       	brcs	.+4      	; 0x1dc <__udivmodhi4_ep>
 1d8:	a6 1b       	sub	r26, r22
 1da:	b7 0b       	sbc	r27, r23

000001dc <__udivmodhi4_ep>:
 1dc:	88 1f       	adc	r24, r24
 1de:	99 1f       	adc	r25, r25
 1e0:	5a 95       	dec	r21
 1e2:	a9 f7       	brne	.-22     	; 0x1ce <__udivmodhi4_loop>
 1e4:	80 95       	com	r24
 1e6:	90 95       	com	r25
 1e8:	bc 01       	movw	r22, r24
 1ea:	cd 01       	movw	r24, r26
 1ec:	08 95       	ret

000001ee <_exit>:
 1ee:	f8 94       	cli

000001f0 <__stop_program>:
 1f0:	ff cf       	rjmp	.-2      	; 0x1f0 <__stop_program>
